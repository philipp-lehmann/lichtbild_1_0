@font-face {
    font-family: 'Inter';
    font-style: normal;
    src: local('Inter'), local('Inter-Regular'),
        url('fonts/Inter-VariableFont_slnt,wght.ttf') format('truetype');
}

/* HTML */
html,
body {
    width: 1080px;
    height: 1920px;
    margin: 0;
    padding: 0;
    background-color: #000;
    color: #fff;
    font-family: 'Inter', sans-serif;
    font-size: 20px;
    line-height: 0.95;
    letter-spacing: 1.25;
    overflow: hidden;
}


/* TYPO */
.type {
    z-index: 10;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    height: 100vh;
    width: 100vw;
}

.type object {
    max-width: 100%;
    max-height: 100%;
    height: auto;
    width: auto;
}

/* P5JS */
canvas {
    display: block;
}

.p5container {
    z-index: 999;
    opacity: 0.0;
    position: fixed;
    bottom: 0;
    right: 0;
    transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
    transform: translate(0, 90%);
}

.p5container:hover {
    opacity: 1.0;
    transform: translate(0, 0%);
}

.svgOutput {
    position: absolute;
    width: 100vw;
    height: 100vh;
    perspective: 1000px;
}

.svgOutput0 {
    left: 7.5%;
    top: 17%;
    width: 55vw;
    height: 55vw;
}

.svgOutput1 {
    left: 46%;
    top: 6%;
    width: 35vw;
    height: 35vw;
}

.svgOutput2 {
    left: -15%;
    top: -4%;
    width: 55vw;
    height: 55vw;
}

.svgOutput3 {
    left: 75%;
    top: 41.5%;
    width: 35vw;
    height: 35vw;
}

.svgOutput4 {
    left: -7.5%;
    top: 80%;
    width: 55vw;
    height: 55vw;
}


.svgOutput svg {
    width: 100%;
    height: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    opacity: calc(1 - var(--opacity-step));
    transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
}

.svgOutput svg:nth-child(1) {
    transform: translate3d(-50%, -50%, -50px);
    opacity: 1.0;
}

.svgOutput svg:nth-child(2) {
    transform: translate3d(-50%, -50%, -100px);
    opacity: 0.3;
}

.svgOutput svg:nth-child(3) {
    transform: translate3d(-50%, -50%, -150px);
    opacity: 0.25;
}

.svgOutput svg:nth-child(4) {
    transform: translate3d(-50%, -50%, -200px);
    opacity: 0.2;
}

.svgOutput svg:nth-child(5) {
    transform: translate3d(-50%, -50%, -250px);
    opacity: 0.15;
}

.svgOutput svg:nth-child(6) {
    transform: translate3d(-50%, -50%, -300px);
    opacity: 0.1;
}

.svgOutput svg:nth-child(n + 7) {
    transform: translate3d(-50%, -50%, -350px);
    opacity: 0.0;
}

/* SVG */
@keyframes draw {
    to {
        stroke-dashoffset: 0;
    }
}

/* Apply the animation to the path elements */
.animated-path {
    stroke-dasharray: 1000;
    /* Set an appropriate value based on the length of your paths */
    stroke-dashoffset: 1000;
    /* Set the same value as dasharray to hide the path initially */
    animation: draw 2s ease forwards;
    /* Adjust the duration (2s in this example) as needed */
}